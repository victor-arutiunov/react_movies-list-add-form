{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","re","NewMovie","state","requiredMessages","titleMessage","imgUrlMessage","imdbUrlMessage","imdbIdMessage","imgUrlMatchMessage","imdbUrlMatchMessage","filmForge","event","preventDefault","Object","values","every","element","setState","props","addMovie","target","reset","inputTitleHandler","value","inputDescriptionHandler","inputImgUrlHandler","persist","match","inputImdbUrlHandler","inputImdbIdHandler","this","onSubmit","htmlFor","type","onChange","name","id","cols","rows","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCrBJK,G,MAAK,sKAEEC,EAAb,4MACEC,MAAQ,CACNjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRI,iBAAkB,CAChBC,cAAc,EACdC,eAAe,EACfC,gBAAgB,EAChBC,eAAe,EACfC,oBAAoB,EACpBC,qBAAqB,IAb3B,EAiBEC,UAAY,SAACC,GACXA,EAAMC,iBACFC,OAAOC,OAAO,EAAKZ,MAAMC,kBAAkBY,OAAM,SAAAC,GAAO,OAAKA,MAC5DH,OAAOC,OAAO,EAAKZ,OAAOa,OAAM,SAAAC,GAAO,OAAIA,OAE9C,EAAKC,SAAS,CACZhC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAEV,EAAKmB,MAAMC,SAAS,EAAKjB,OACzBS,EAAMS,OAAOC,UA9BnB,EAkCEC,kBAAoB,SAACX,GACnBA,EAAMC,iBACN,EAAKK,SAAS,CAAEhC,MAAO0B,EAAMS,OAAOG,QACpC,EAAKN,UAAS,SAAAf,GAAK,MAAK,CACtBC,iBAAiB,2BACZD,EAAMC,kBADK,IAEdC,cAAeF,EAAMjB,aAxC7B,EA6CEuC,wBAA0B,SAACb,GACzBA,EAAMC,iBACN,EAAKK,SAAS,CACZ/B,YAAayB,EAAMS,OAAOG,SAhDhC,EAoDEE,mBAAqB,SAACd,GACpBA,EAAMC,iBACND,EAAMe,UACN,EAAKT,SAAS,CACZ9B,OAAQwB,EAAMS,OAAOG,QAEvB,EAAKN,UAAS,SAAAf,GAAK,MAAK,CACtBC,iBAAiB,2BACZD,EAAMC,kBADK,IAEdE,eAAgBH,EAAMf,OACtBqB,oBAAqBG,EAAMS,OAAOG,MAAMI,MAAM3B,UA9DtD,EAmEE4B,oBAAsB,SAACjB,GACrBA,EAAMC,iBACND,EAAMe,UACN,EAAKT,SAAS,CACZ7B,QAASuB,EAAMS,OAAOG,QAExB,EAAKN,UAAS,SAAAf,GAAK,MAAK,CACtBC,iBAAiB,2BACZD,EAAMC,kBADK,IAEdG,gBAAiBJ,EAAMd,QACvBqB,qBAAsBE,EAAMS,OAAOG,MAAMI,MAAM3B,UA7EvD,EAkFE6B,mBAAqB,SAAClB,GACpBA,EAAMC,iBACN,EAAKK,SAAS,CAAElB,OAAQY,EAAMS,OAAOG,QACrC,EAAKN,UAAS,SAAAf,GAAK,MAAK,CACtBC,iBAAiB,2BACZD,EAAMC,kBADK,IAEdI,eAAgBL,EAAMH,cAxF9B,4CA6FE,WACE,MAKI+B,KAAK5B,MAAMC,iBAJbC,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,cAGF,OACE,0BAAMwB,SAAUD,KAAKpB,UAAWrB,UAAU,gBACxC,2BAAO2C,QAAQ,GAAG3C,UAAU,aAC1B,6CACA,2BACEA,UAAS,oBAAee,GACxB6B,KAAK,OACLC,SAAUJ,KAAKR,oBAEhBlB,GAAgB,uBAAGf,UAAU,gBAAb,uBAGnB,8BACE8C,KAAK,cACLC,GAAG,GACHC,KAAK,KACLC,KAAK,KACLJ,SAAUJ,KAAKN,0BAGjB,2BAAOQ,QAAQ,GAAG3C,UAAU,aAC1B,wCACA,2BACEA,UAAS,oBAAegB,EAAf,2BACLyB,KAAK5B,MAAMC,iBAAiBK,oBAChCyB,KAAK,OACLC,SAAUJ,KAAKL,qBAEhBpB,GAEC,uBAAGhB,UAAU,gBAAb,0BAKDyC,KAAK5B,MAAMC,iBAAiBK,oBAE3B,uBAAGnB,UAAU,gBAAb,6BAOJ,2BAAO2C,QAAQ,GAAG3C,UAAU,aAC1B,yCACA,2BACEA,UAAS,oBAAeiB,EAAf,2BACLwB,KAAK5B,MAAMC,iBAAiBM,qBAChCwB,KAAK,OACLC,SAAUJ,KAAKF,sBAEhBtB,GAEC,uBAAGjB,UAAU,gBAAb,yBAKDyC,KAAK5B,MAAMC,iBAAiBM,qBAE3B,uBAAGpB,UAAU,gBAAb,6BAOJ,2BAAO2C,QAAQ,GAAG3C,UAAU,aAC1B,wCACA,2BACEA,UAAS,oBAAekB,GACxB0B,KAAK,OACLC,SAAUJ,KAAKD,qBAEhBtB,GAEC,uBAAGlB,UAAU,gBAAb,oBAOHwB,OAAOC,OAAOgB,KAAK5B,MAAMC,kBAAkBY,OAAM,SAAAC,GAAO,OAAKA,MACzDH,OAAOC,OAAOgB,KAAK5B,OAAOa,OAAM,SAAAC,GAAO,OAAIA,MAC3C,4BAAQiB,KAAK,UAAb,kBA3Lb,GAA8BM,a,OCDjBC,EAAb,4MACEtC,MAAQ,CACNP,OAAQ8C,GAFZ,EAKEtB,SAAW,SAACtB,GACV,EAAKoB,UACH,SAAAf,GAAK,MAAK,CAAEP,OAAO,GAAD,mBAAMO,EAAMP,QAAZ,CAAoBE,SAP5C,4CAWE,WACE,IAAQF,EAAWmC,KAAK5B,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU8B,SAAUW,KAAKX,iBApBnC,GAAyBoB,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.868a488e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n// eslint-disable-next-line\nconst re = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    requiredMessages: {\n      titleMessage: false,\n      imgUrlMessage: false,\n      imdbUrlMessage: false,\n      imdbIdMessage: false,\n      imgUrlMatchMessage: false,\n      imdbUrlMatchMessage: false,\n    },\n  };\n\n  filmForge = (event) => {\n    event.preventDefault();\n    if (Object.values(this.state.requiredMessages).every(element => !element)\n      && Object.values(this.state).every(element => element)\n    ) {\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n      this.props.addMovie(this.state);\n      event.target.reset();\n    }\n  }\n\n  inputTitleHandler = (event) => {\n    event.preventDefault();\n    this.setState({ title: event.target.value });\n    this.setState(state => ({\n      requiredMessages: {\n        ...state.requiredMessages,\n        titleMessage: !state.title,\n      },\n    }));\n  }\n\n  inputDescriptionHandler = (event) => {\n    event.preventDefault();\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  inputImgUrlHandler = (event) => {\n    event.preventDefault();\n    event.persist();\n    this.setState({\n      imgUrl: event.target.value,\n    });\n    this.setState(state => ({\n      requiredMessages: {\n        ...state.requiredMessages,\n        imgUrlMessage: !state.imgUrl,\n        imgUrlMatchMessage: !event.target.value.match(re),\n      },\n    }));\n  }\n\n  inputImdbUrlHandler = (event) => {\n    event.preventDefault();\n    event.persist();\n    this.setState({\n      imdbUrl: event.target.value,\n    });\n    this.setState(state => ({\n      requiredMessages: {\n        ...state.requiredMessages,\n        imdbUrlMessage: !state.imdbUrl,\n        imdbUrlMatchMessage: !event.target.value.match(re),\n      },\n    }));\n  }\n\n  inputImdbIdHandler = (event) => {\n    event.preventDefault();\n    this.setState({ imdbId: event.target.value });\n    this.setState(state => ({\n      requiredMessages: {\n        ...state.requiredMessages,\n        imdbIdMessage: !state.imdbId,\n      },\n    }));\n  }\n\n  render() {\n    const {\n      titleMessage,\n      imgUrlMessage,\n      imdbUrlMessage,\n      imdbIdMessage,\n    } = this.state.requiredMessages;\n\n    return (\n      <form onSubmit={this.filmForge} className=\"AddMovieForm\">\n        <label htmlFor=\"\" className=\"FormLabel\">\n          <span>Movie title</span>\n          <input\n            className={`FormInput ${titleMessage}`}\n            type=\"text\"\n            onChange={this.inputTitleHandler}\n          />\n          {titleMessage && <p className=\"ErrorMessage\">Please enter title</p>}\n        </label>\n\n        <textarea\n          name=\"description\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n          onChange={this.inputDescriptionHandler}\n        />\n\n        <label htmlFor=\"\" className=\"FormLabel\">\n          <span>imgUrl</span>\n          <input\n            className={`FormInput ${imgUrlMessage}\n              ${this.state.requiredMessages.imgUrlMatchMessage}`}\n            type=\"text\"\n            onChange={this.inputImgUrlHandler}\n          />\n          {imgUrlMessage\n            && (\n            <p className=\"ErrorMessage\">\n              Please enter image URL\n            </p>\n            )\n          }\n          {this.state.requiredMessages.imgUrlMatchMessage\n            && (\n            <p className=\"ErrorMessage\">\n              Please enter correct URL\n            </p>\n            )\n          }\n        </label>\n\n        <label htmlFor=\"\" className=\"FormLabel\">\n          <span>imdbUrl</span>\n          <input\n            className={`FormInput ${imdbUrlMessage}\n              ${this.state.requiredMessages.imdbUrlMatchMessage}`}\n            type=\"text\"\n            onChange={this.inputImdbUrlHandler}\n          />\n          {imdbUrlMessage\n            && (\n            <p className=\"ErrorMessage\">\n              Please enter imbd URL\n            </p>\n            )\n          }\n          {this.state.requiredMessages.imdbUrlMatchMessage\n            && (\n            <p className=\"ErrorMessage\">\n              Please enter correct URL\n            </p>\n            )\n          }\n        </label>\n\n        <label htmlFor=\"\" className=\"FormLabel\">\n          <span>imdbId</span>\n          <input\n            className={`FormInput ${imdbIdMessage}`}\n            type=\"text\"\n            onChange={this.inputImdbIdHandler}\n          />\n          {imdbIdMessage\n            && (\n            <p className=\"ErrorMessage\">\n              Please enter ID\n            </p>\n            )\n          }\n        </label>\n\n        {Object.values(this.state.requiredMessages).every(element => !element)\n          && Object.values(this.state).every(element => element)\n          && <button type=\"submit\">Add Movie</button>\n        }\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(\n      state => ({ movies: [...state.movies, movie] }),\n    );\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}